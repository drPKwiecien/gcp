name: Deploy to Google Cloud Functions

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        version: 'latest'
        project_id: ${{ vars.CICD_GCP_PROJECTID }}

    - name: Authenticate with service account
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.CICD_GCP }}

    - name: Set Project ID
      run: gcloud config set project ${{ vars.CICD_GCP_PROJECTID }}

    - name: Deploy to Google Cloud Functions
      run: |
        gcloud functions deploy weather_collector  \
        --allow-unauthenticated \
        --gen2 \
        --runtime python311 \
        --trigger-topic weather-scheduler \
        --entry-point weather_collector \
        --region europe-central2 \
        --source . \
        --service-account=gcpfunctions-sa@${{ vars.CICD_GCP_PROJECTID }}.iam.gserviceaccount.com 
        
    - name: Delete Old Function (if exists)
      run: |
        if gcloud functions describe weather_collector --region=europe-central2 > /dev/null 2>&1; then
          gcloud functions delete weather_collector --region=europe-central2 --quiet
        fi

    - name: Deploy New Cloud Function (Pub/Sub)
      run: |
        gcloud functions deploy weather_collector \
          --gen2 \
          --runtime python311 \
          --trigger-topic weather-scheduler \
          --region europe-central2 \
          --entry-point weather_collector \
          --source . \
          --service-account=gcpfunctions-sa@${{ vars.CICD_GCP_PROJECTID }}.iam.gserviceaccount.com \
          --set-env-vars OPENWEATHER_API_KEY="${{ secrets.OPENWEATHER_API_KEY }}"

    - name: Create Pub/Sub Topic (if not exists)
      run: |
        gcloud pubsub topics describe weather-scheduler || gcloud pubsub topics create weather-scheduler

    - name: Create or Update Cloud Scheduler Job
      run: |
        if gcloud scheduler jobs describe weather-job --location=europe-central2 > /dev/null 2>&1; then
          echo "Cloud Scheduler job exists. Updating schedule..."
          gcloud scheduler jobs update pubsub weather-job \
            --schedule="15 * * * *" \
            --time-zone="Europe/Warsaw" \
            --topic=weather-scheduler \
            --message-body="{}" \
            --location=europe-central2
        else
          echo "Creating new Cloud Scheduler job..."
          gcloud scheduler jobs create pubsub weather-job \
            --schedule="15 * * * *" \
            --time-zone="Europe/Warsaw" \
            --topic=weather-scheduler \
            --message-body="{}" \
            --location=europe-central2
        fi
